diff --git a/notebooks/Black-Scholes.ipynb b/notebooks/Black-Scholes.ipynb
index 8c2900c..21789d2 100644
--- a/notebooks/Black-Scholes.ipynb
+++ b/notebooks/Black-Scholes.ipynb
@@ -538,6 +538,10 @@
     "    T     = float(T)\n",
     "    S0    = float(S0)\n",
     "    sigma = float(sigma)\n",
+    "    \n",
+    "    # --- checking constrains ---\n",
+    "    assert sigma > 0\n",
+    "    assert r > 0\n",
     "\n",
     "    # --- d1 and d2 ---\n",
     "    d1_vec = ( np.log( S0 / K_vec ) + ( r + 0.5 * sigma**2 ) * T ) / ( sigma * T**0.5 )\n",
@@ -725,21 +729,21 @@
  ],
  "metadata": {
   "kernelspec": {
-   "display_name": "Python 3",
+   "display_name": "Python 2",
    "language": "python",
-   "name": "python3"
+   "name": "python2"
   },
   "language_info": {
    "codemirror_mode": {
     "name": "ipython",
-    "version": 3
+    "version": 2
    },
    "file_extension": ".py",
    "mimetype": "text/x-python",
    "name": "python",
    "nbconvert_exporter": "python",
-   "pygments_lexer": "ipython3",
-   "version": "3.6.2"
+   "pygments_lexer": "ipython2",
+   "version": "2.7.13"
   }
  },
  "nbformat": 4,
diff --git a/notebooks/Call_Binom.ipynb b/notebooks/Call_Binom.ipynb
index 4f1a67e..9654f4d 100644
--- a/notebooks/Call_Binom.ipynb
+++ b/notebooks/Call_Binom.ipynb
@@ -30,6 +30,11 @@
     "- date on which the life of a financial instrument ends\n",
     "- also called: date of expiry\n",
     "\n",
+    "<b>Price of underlying:</b>\n",
+    "- price of underlying now: $S_0$\n",
+    "- at maturity: $S_T$\n",
+    "- price of the underlying (at any selected time point): $S$\n",
+    "\n",
     "<b>Strike price of a call option, $K$:</b>\n",
     "- a call option is an agreement that gives an investor the right, but not the obligation, to buy the underlying for the strike price at the date of maturity\n",
     "\n",
@@ -58,11 +63,6 @@
     "<b>Payoff:</b>\n",
     "- the amount that the writer pays to the buyer at the time of maturity\n",
     "\n",
-    "<b>Price of underlying:</b>\n",
-    "- price of underlying now: $S_0$\n",
-    "- at maturity: $S_T$\n",
-    "- price of the underlying (at any selected time point): $S$\n",
-    "\n",
     "<b>European / American:</b>\n",
     "- no geographical meaning\n",
     "  - European: can be exercised only at the date of expiry\n",
@@ -176,7 +176,9 @@
    "cell_type": "code",
    "execution_count": 26,
    "metadata": {
-    "code_folding": []
+    "code_folding": [
+     0
+    ]
    },
    "outputs": [
     {
@@ -313,6 +315,10 @@
     "    u  = float(u)\n",
     "    d  = float(d)\n",
     "    rT = float(r) * float (T)\n",
+    "    \n",
+    "    # --- checking constrains ---\n",
+    "    assert u > 1\n",
+    "    assert d < 1\n",
     "\n",
     "    # --- Option payoff in the upper end node and the lower end node ---\n",
     "    fd = np.maximum( 0.0, d * S0 - K ) # option payoff in the \"down\" case\n",
@@ -524,7 +530,9 @@
    "cell_type": "code",
    "execution_count": 33,
    "metadata": {
-    "code_folding": []
+    "code_folding": [
+     0
+    ]
    },
    "outputs": [
     {
@@ -661,6 +669,10 @@
     "    u  = float(u)\n",
     "    d  = float(d)\n",
     "    rT = float(r) * float(T)\n",
+    "    \n",
+    "    # --- checking constrains ---\n",
+    "    assert u > 1\n",
+    "    assert d < 1\n",
     "        \n",
     "    # --- Probability of going up. Option payoff values at end nodes. ---\n",
     "    p  = ( np.exp(rT) - d ) / ( u - d ) \n",
@@ -679,6 +691,36 @@
    "cell_type": "markdown",
    "metadata": {},
    "source": [
+    "### <a name=\"Test_TwoStepTree\" style=\"text-decoration: none\"><i>Test: Two-step binomial tree pricer</i></a>"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 1,
+   "metadata": {},
+   "outputs": [
+    {
+     "ename": "NameError",
+     "evalue": "name 'call_binom_2_step' is not defined",
+     "output_type": "error",
+     "traceback": [
+      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
+      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
+      "\u001b[1;32m<ipython-input-1-f41f6ae88fca>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m()\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[1;31m# === Test: Print option price for a specific example, rT=0.03 (output value should be 1.28218) ===\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m----> 2\u001b[1;33m \u001b[0mo\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mcall_binom_2_step\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;36m20\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;36m21\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;36m1.1\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;36m0.9\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;36m0.03\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;36m1.0\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m      3\u001b[0m \u001b[0mo\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;36m1\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
+      "\u001b[1;31mNameError\u001b[0m: name 'call_binom_2_step' is not defined"
+     ]
+    }
+   ],
+   "source": [
+    "# === Test: Print option price for a specific example, rT=0.03 (output value should be 1.28218) ===\n",
+    "o = call_binom_2_step(20, 21, 1.1, 0.9, 0.03, 1.0)\n",
+    "o[1]"
+   ]
+  },
+  {
+   "cell_type": "markdown",
+   "metadata": {},
+   "source": [
     "### <i>Pricer with 5-step tree</i>"
    ]
   },
@@ -727,6 +769,10 @@
     "    d  = float(d)\n",
     "    rT = float(r) * float(T)\n",
     "    \n",
+    "    # --- checking constrains ---\n",
+    "    assert u > 1\n",
+    "    assert d < 1\n",
+    "    \n",
     "    # --- Probability of going up ---\n",
     "    p  = ( np.exp(rT) - d ) / ( u - d ) \n",
     "\n",
@@ -847,37 +893,6 @@
    "cell_type": "markdown",
    "metadata": {},
    "source": [
-    "### <a name=\"Test_TwoStepTree\" style=\"text-decoration: none\"><i>Test: Two-step binomial tree pricer</i></a>"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 38,
-   "metadata": {
-    "code_folding": []
-   },
-   "outputs": [
-    {
-     "data": {
-      "text/plain": [
-       "1.2821849452741403"
-      ]
-     },
-     "execution_count": 38,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "# === Test: Print option price for a specific example, rT=0.03 (output value should be 1.28218) ===\n",
-    "o = call_binom_2_step(20, 21, 1.1, 0.9, 0.03, 1.0)\n",
-    "o[1]"
-   ]
-  },
-  {
-   "cell_type": "markdown",
-   "metadata": {},
-   "source": [
     "## <a name=\"Theory_BinomCoeffBinomDist\" style=\"text-decoration: none\">Binomial coefficients, Binomial distribution</a>\n",
     "\n",
     "Consider an $n$-step binomial tree without the $p$ and $(1-p)$ probabilities.\n",
@@ -940,7 +955,9 @@
    "cell_type": "code",
    "execution_count": 40,
    "metadata": {
-    "code_folding": []
+    "code_folding": [
+     0
+    ]
    },
    "outputs": [
     {
@@ -1103,6 +1120,10 @@
     "    n     = int(n)\n",
     "    u     = np.exp(sigma*np.sqrt(T/n))\n",
     "    # d = 1 / u\n",
+    "    \n",
+    "    # --- checking constrains ---\n",
+    "    assert sigma > 0\n",
+    "    assert r > 0\n",
     "        \n",
     "    # --- Probability of going up, same at each step --- \n",
     "    p  = ( u * np.exp(r * T / n) - 1.0 ) / ( np.square(u) - 1.0 )\n",
@@ -1295,21 +1316,21 @@
  ],
  "metadata": {
   "kernelspec": {
-   "display_name": "Python 3",
+   "display_name": "Python 2",
    "language": "python",
-   "name": "python3"
+   "name": "python2"
   },
   "language_info": {
    "codemirror_mode": {
     "name": "ipython",
-    "version": 3
+    "version": 2
    },
    "file_extension": ".py",
    "mimetype": "text/x-python",
    "name": "python",
    "nbconvert_exporter": "python",
-   "pygments_lexer": "ipython3",
-   "version": "3.6.2"
+   "pygments_lexer": "ipython2",
+   "version": "2.7.13"
   }
  },
  "nbformat": 4,
diff --git a/notebooks/Intro.ipynb b/notebooks/Intro.ipynb
index e35fad5..c2847df 100644
--- a/notebooks/Intro.ipynb
+++ b/notebooks/Intro.ipynb
@@ -102,21 +102,21 @@
  ],
  "metadata": {
   "kernelspec": {
-   "display_name": "Python 3",
+   "display_name": "Python 2",
    "language": "python",
-   "name": "python3"
+   "name": "python2"
   },
   "language_info": {
    "codemirror_mode": {
     "name": "ipython",
-    "version": 3
+    "version": 2
    },
    "file_extension": ".py",
    "mimetype": "text/x-python",
    "name": "python",
    "nbconvert_exporter": "python",
-   "pygments_lexer": "ipython3",
-   "version": "3.6.2"
+   "pygments_lexer": "ipython2",
+   "version": "2.7.13"
   }
  },
  "nbformat": 4,
